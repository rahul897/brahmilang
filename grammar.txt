start     : excuse me statements nen vastanu babu
statements: newline* statement (newline+ statement)* newline*
statement : keyword:var identifier eq comp-expr
          : com-expr ((and|or) comp_expr)*
          : continue
          : break
com-expr : ne comp-expr
        : arith-expr ((ee|lt|lte|gte|ge) arith-expr)*

arith-expr : term ((plus|minus) term)*
term : factor ((mul|div) factor)*
factor: (plus|minus) factor | power
power: atom (pow factor)*
atom  : int|float| call
      : lparen arith-expr rparen
      : if-expr
      : while-expr
      : fun-def
call : identifier (lparen (comp_expr (, comp_expr)*)? rparen)?
     : identifier (eq call)?
if-expr: if comp-expr { statement} (elif {statement})* (else {statement})?
while-expr: while comp-expr { statement }
fun-def : fun identifier? lparen  (identifier (, identifier)*)? rparen { statement }